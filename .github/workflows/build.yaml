name: Build, Push Docker image and Deploy

on:
  push:
    branches:
      - main
  # pull_request: # used in workflows for running tests

# permissions:
#   id-token: write
#   contents: read

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      # -
      #   name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: newtonchutney/nkm-surge-products:latest

  provision-infra:
    name: Provision Infrastructure with Terraform
    runs-on: ubuntu-latest
    env:
      # Job level env vars
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0
        
      - name: Initialize Terraform
        working-directory: terraform
        run: terraform init

      - name: Validate Terraform
        working-directory: terraform
        run: terraform validate

      - name: Apply Terraform
        working-directory: terraform
        run: terraform apply -auto-approve
      
      - name: Capture env vars
        # id: terraform_output
        working-directory: terraform
        run: |
          echo "DB_USER=$(terraform output -raw admin_login)" >> $GITHUB_ENV
          echo "DB_PASSWORD=$(terraform output -raw admin_password)" >> $GITHUB_ENV
          echo "DB_SERVICE=$(terraform output -raw mysql_flexible_server_database_name)" >> $GITHUB_ENV
          echo "DB_HOST=$(terraform output -raw mysql_flexible_server_hostname)" >> $GITHUB_ENV
          echo "RG_NAME=$(terraform output -raw resource_group_name)" >> $GITHUB_ENV
          echo "KUBE_CLUSTER_NAME=$(terraform output -raw kube_cluster_name)" >> $GITHUB_ENV
          echo "KUBE_CLUSTER_RG=$(terraform output -raw kube_cluster_rg)" >> $GITHUB_ENV

  deploy-aks:
    name: Deploy Application to AKS
    runs-on: ubuntu-latest
    needs: 
      - docker
      - provision-infra
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.27.1'

      - name: Authenticate to AKS
        uses: azure/aks-set-context@v4
        with:
          cluster-name: ${{ env.KUBE_CLUSTER_NAME }}
          resource-group: ${{ env.KUBE_CLUSTER_RG }}

      - name: Deploy Kubernetes Manifests
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/ingress.yaml

      - name: Inject password into container deployment
        run: |
          kubectl set env deployment/nkm-surge-products DB_HOST=$DB_HOST
          kubectl set env deployment/nkm-surge-products DB_USER=$DB_USER
          kubectl set env deployment/nkm-surge-products DB_PASSWORD=$DB_PASSWORD
          kubectl set env deployment/nkm-surge-products DB_SERVICE=$DB_SERVICE
